
import type { Timestamp } from 'firebase/firestore';

// Defines the structure for a single chair within a table layout
export interface Chair {
  id: string; // Unique identifier for the chair
  x: number;  // x-coordinate relative to its parent table's center
  y: number;  // y-coordinate relative to its parent table's center
  // guestId?: string; // Optional: For later when assigning guests to seats
}

// Defines the structure for a single table element in a venue layout
export interface TableElement {
  id: string; // Unique identifier for the table
  type: 'rect' | 'circle'; // Shape of the table
  x: number;  // x-coordinate of the table's center on the canvas
  y: number;  // y-coordinate of the table's center on the canvas
  width: number; // Width of the table (diameter if circular)
  height: number; // Height of the table (diameter if circular)
  radius?: number; // Radius, specifically for circular tables
  rotation: number; // Rotation angle of the table in degrees
  capacity: number; // Number of guests this table can accommodate
  chairs: Chair[]; // Array of chairs belonging to this table
  displayOrderNumber: number; // User-assigned number for display (e.g., Table #1)
  label?: string; // Optional label for non-table elements like stages or stations
  // assignedGuests?: string[]; // Optional: For later when assigning guests
}

// Defines the structure for a saved venue layout
export interface VenueLayout {
  id?: string; // Firestore document ID (auto-generated by Firestore on add)
  name: string; // User-defined name for the layout (e.g., "Main Ballroom - Gala Setup")
  description?: string; // Optional description for the layout
  ownerId: string; // Firebase UID of the user who created/owns this layout
  isPublic?: boolean; // True if this is a public template, false or undefined for private user layouts
  tables: TableElement[]; // Array of all table elements in this layout
  venueShape?: number[]; // Optional: Array of points defining the venue boundary polygon
  totalCapacity: number; // Sum of capacities of all tables in this layout
  previewImageUrl?: string; // Optional: URL for a thumbnail image of the layout
  dataAiHint?: string; // For AI-assisted image searching for preview
  createdAt: Timestamp; // Firestore timestamp for when the layout was created
  updatedAt: Timestamp; // Firestore timestamp for when the layout was last updated
}
